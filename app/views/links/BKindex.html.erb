<link rel="stylesheet" href="//code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css">
<script src="//code.jquery.com/jquery-1.9.1.js"></script>
<script src="//code.jquery.com/ui/1.10.3/jquery-ui.js"></script>

<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=true"></script>

<script type="text/javascript" src="http://google-maps-utility-library-v3.googlecode.com/svn/tags/markerclusterer/1.0/src/markerclusterer_packed.js"></script>

<script type="text/javascript">

    var map, layer;

    var n1, n2;

    var rendererOptions = {
        strokeColor: "#FF0000",
        //draggable: true,
        preserveViewport: true,
        suppressMarkers: true
    };

    var directionsService, directionsDisplay;

    function initialize() {
        var mapOptions = {
            zoom: 18,
            center: new google.maps.LatLng(37.508059, 375.082752)
        };
        map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);

        directionsDisplay = new google.maps.DirectionsRenderer();
        directionsDisplay.setMap(map);
        directionsDisplay.setPanel(document.getElementById('results'));

        directionsService = new google.maps.DirectionsService();

        layer = new google.maps.FusionTablesLayer({
            query: {
                select: '\'latitude\'',
                from: '1VRWffIb31b6fdGhbUJrVr8EoY2RS4R1gUl63cUAO'
            },
            options: {
                suppressInfoWindows: true
            }
        });
        layer.setMap(map);

        var infowindow = new google.maps.InfoWindow();

        var check = true;
        var start = null;

        google.maps.event.addListener(layer, 'click', function(e) {
            if (check) {
                document.getElementById("info").style.display = "none";
                n1 = e.row['idnod'].value;
                infowindow.setContent(e.infoWindowHtml +
                        '<br><label>Click on another point</label>');
                infowindow.setPosition(e.latLng);
                infowindow.open(map);
                check = false;
                start = e.latLng;
            } else {
                infowindow.close();
                n2 = e.row['idnod'].value;
                var request = {
                    origin: start,
                    destination: e.latLng,
                    travelMode: google.maps.DirectionsTravelMode.DRIVING
                };
                directionsService.route(request, function(response, status) {
                    if (status == google.maps.DirectionsStatus.OK) {
                        directionsDisplay.setOptions({
                            suppressMarkers: true,
                            preserveViewport: true,
                            polylineOptions: {
                                strokeColor: "red"
                            }
                        });
                        directionsDisplay.setDirections(response);
                        showSteps(response);
                    } else {
                        window.alert('Error generating directions: ' + status);
                    }
                });
                check = true;
            }
        });

        addLink();
    }

    function showSteps(res) {
        var myRoute = res.routes[0].legs[0];
        if(myRoute.steps.length == 1) {
            var duration = myRoute.duration.value;
            var dist = myRoute.distance.value;
            //alert("DURATA: " + duration + " --- DISTANZA: " + dist);

            $('#link_n1').val(n1);
            $('#link_n2').val(n2);
            $('#link_Timeg').val(duration);
            //$('#link_Timew').val(duration);
            $('#link_Distance').val(dist);
            document.getElementById("info").style.display = "block";
            //document.getElementById("link_add").style.display = "block";
        }
    }

    var node1, node1_lat, node1_lng;
    var node2, node2_lat, node2_lng;
    var links_start = [];
    var links_end = [];
    function addLink() {
        <% @links.each do |itm| %>

            node1 = <%= itm.n1 %>;
            $.get("https://www.googleapis.com/fusiontables/v1/query?sql=SELECT latitude, longitude FROM 1VRWffIb31b6fdGhbUJrVr8EoY2RS4R1gUl63cUAO WHERE idnod = "+ node1 +"&key=AIzaSyB10PsKhxnW0krauzOAlCGyfEusLozigIw",function(data,status){
                node1_lat = String(data.rows).split(",")[0];
                node1_lng = String(data.rows).split(",")[1];
                var start = new google.maps.LatLng(node1_lat, node1_lng);
                links_start.push(start);
            });

            node2 = <%= itm.n2 %>;
            $.get("https://www.googleapis.com/fusiontables/v1/query?sql=SELECT latitude, longitude FROM 1VRWffIb31b6fdGhbUJrVr8EoY2RS4R1gUl63cUAO WHERE idnod = "+ node2 +"&key=AIzaSyB10PsKhxnW0krauzOAlCGyfEusLozigIw",function(data,status){
                node2_lat = String(data.rows).split(",")[0];
                node2_lng = String(data.rows).split(",")[1];
                var end = new google.maps.LatLng(node2_lat, node2_lng);
                links_end.push(end);
            });
        <% end %>
    }

    var nextLink = 0;
    var delay = 1000;
    function theNext() {
        if (nextLink < links_start.length) {
            setTimeout('calcRoute("'+nextLink+'", theNext)', delay);
            nextLink++;
        } else {
            //map.fitBounds(bounds);
            alert("FATTO");
        }
    }

    function calcRoute(link, next) {

        var dD = new google.maps.DirectionsRenderer();
        dD.setMap(map);

        var dS = new google.maps.DirectionsService();

        var request = {
             origin: links_start[link],
             destination: links_end[link],
             travelMode: google.maps.TravelMode.DRIVING
         };

        dS.route(request, function(response, status) {
            if (status == google.maps.DirectionsStatus.OK) {
                dD.setOptions({ suppressMarkers: true, preserveViewport: true });
                dD.setDirections(response);
            } else {
                if (status == google.maps.DirectionsStatus.OVER_QUERY_LIMIT) {
                    nextLink--;
                    delay = delay + 200;
                } else {
                    window.alert('Error generating directions: ' + status);
                }
            }
            next();
        });
    }

    google.maps.event.addDomListener(window, 'load', initialize);

</script>

<div data-role="header" data-theme="b">
  <h1>Links</h1>
  <div id="custom-border-radius" class="ui-btn-left" data-role="controlgroup" data-type="horizontal" data-mini="true">
    <%= link_to 'Back', 'intloc', 'data-icon' => 'back', 'data-role' => 'button', 'data-iconpos' => 'notext' %>
    <%= link_to 'Home', root_url, 'data-icon' => 'home', 'data-role' => 'button', 'data-iconpos' => 'notext', :target => '_parent' %>
  </div>

  <div id="custom-border-radius" class="ui-btn-right" data-role="controlgroup" data-type="horizontal" data-mini="true">
    <%= link_to 'Add', new_link_path, 'data-icon' => 'plus', 'data-role' => 'button', 'data-iconpos' => 'notext', :target => '_parent' %>
    <a href="#" data-role="button" data-icon="info" data-iconpos="notext" onclick="theNext();">Delete</a>
  </div>
</div>

<div data-role="content">

  <div class="ui-grid-c" id="info" style="display: none">
    <div class="ui-block-a" style="padding-right: 5px">
      <strong><b><label for="link_Latitude">DA Nodo</label></b></strong>
      <input id="link_n1" name="link[n1]" readonly="readonly" type="text">
    </div>
    <div class="ui-block-b" style="padding-left: 5px; padding-right: 5px">
      <strong><b><label for="nodo_Longitude">A Nodo</label></b></strong>
      <input id="link_n2" name="link[n2]" readonly="readonly" type="text">
    </div>
    <div class="ui-block-c" style="padding-left: 5px; padding-right: 5px">
      <strong><b><label for="link_Latitude">Durata (s)</label></b></strong>
      <input id="link_Timeg" name="link[Timeg]" readonly="readonly" type="text">
    </div>
    <div class="ui-block-d" style="padding-left: 5px">
      <strong><b><label for="nodo_Longitude">Distanza (m)</label></b></strong>
      <input id="link_Distance" name="link[Distance]" readonly="readonly" type="text">
    </div>
  </div>

  <div id="map-canvas" style="width: 100%; height: 630px" class="ui-corner-all"></div>
</div>